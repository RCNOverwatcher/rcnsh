@tailwind base;
@tailwind components;
@tailwind utilities;

html, body, #__next {
  width:100%;
  min-height: 100dvh;
  height: 100dvh;
}

*, *::before, *::after {
  box-sizing: border-box;
  transform-style: preserve-3d;
}

:root {
  --spread: 20;
  --dot: 2;
  --width: 100dvw;
  --height: 100dvh;
  --size: 256;
  --speed: 20;
  --brightness: 1.25;
  --intersect: intersect;
  --depth: 100px;
  --bg: conic-gradient(from 180deg at 50% 100%,#2c5b98,#5966af,#c5c0b8 1turn);
}

body {
  display: grid;
  place-items: center;
  background: hsl(0 0% 10%);
}

.content {
  position: relative;
  z-index: 1;
}

.scene {
  background: #171717;
  z-index: -1;
}

.canvas {
  width: var(--width);
  height: var(--height);
}

.canvas::before {
  content: "";
  position: absolute;
  inset: 0;
  background: var(--bg);
  mask:
          radial-gradient(circle at 50% 50%, white calc(var(--dot) * 1px), transparent calc((var(--dot) * 1px) + 0.5px)) 50% 50% / calc(var(--spread) * 1px) calc(var(--spread) * 1px),
          url("/noise-mask.png") calc(var(--size) * 1px) 50% / calc(var(--size) * 1px) calc(var(--size) * 1px);
  mask-composite: var(--intersect);
  animation: flicker calc(var(--speed) * 1s) infinite linear;
  filter: brightness(var(--brightness));
  border-radius: 12px;
}

@keyframes flicker {
  to {
    mask-position: 50% 50%, 0 50%;
  }
}

.no-mask .canvas {
  mask: unset;
}
.dots-mask .canvas {
  mask: radial-gradient(circle at 50% 50%, white calc(var(--dot) * 1px), transparent calc((var(--dot) * 1px) + 0.5px)) 50% 50% / calc(var(--spread) * 1px) calc(var(--spread) * 1px);
}
.noise-mask .canvas {
  mask: url("/noise-mask.png") calc(var(--size) * 1px) 50% / calc(var(--size) * 1px) calc(var(--size) * 1px);
}

.backdrop {
  background: var(--bg);
  position: absolute;
  inset: 0;
}

.noise::before {
  content: "";
  background: var(--bg);
  position: absolute;
  inset: 0;
  mask: url("/noise-mask.png") calc(var(--size) * 1px) 50% / calc(var(--size) * 1px) calc(var(--size) * 1px);
  animation: flicker calc(var(--speed) * 1s) infinite linear;
}

.dots, .noise, .backdrop {
  position: absolute;
  inset: 0;
  opacity: 0;
}

.dots::before {
  content: "";
  background: var(--bg);
  position: absolute;
  inset: 0;
  mask: radial-gradient(circle at 50% 50%, white calc(var(--dot) * 1px), transparent calc((var(--dot) * 1px) + 0.5px)) 50% 50% / calc(var(--spread) * 1px) calc(var(--spread) * 1px);
}

.dots::after,
.noise::after,
.backdrop::after,
.scene::after,
.canvas::after {
  content: "Dots Mask";
  white-space: nowrap;
  position: absolute;
  left: calc(100% + 3rem);
  top: 50%;
  translate: 0 -50%;
  font-size: 2rem;
  color: hsl(0 0% 60%);
  font-family: "Geist", sans-serif;
  font-weight: 60;
  background: linear-gradient(white, hsl(0 0% 0%));
  background-clip: text;
  -webkit-background-clip: text;
  opacity: 0;
}

.noise::after {
  content: "Noise Mask";
}

.backdrop::after {
  content: "Background";
}

.scene::after {
  content: "Backdrop";
}
.canvas::after {
  content: "Composite Mask";
}

[data-exploded] :is(.dots, .noise, .backdrop),
[data-exploded] .dots::after,
[data-exploded] .noise::after,
[data-exploded] .backdrop::after {
  opacity: 1;
}


[data-exploded] .scene {
  transform: rotateX(-24deg) rotateY(32deg) rotateX(90deg) translate3d(0, 0, calc(var(--depth) * -2));
  transition: transform 1s 0s;
}

[data-exploded] .canvas {
  transform: translate3d(0, 0, calc(var(--depth) * 4));
  transition: transform 1s 1.5s;
}

[data-exploded] .scene::after,
[data-exploded] .canvas::after {
  opacity: 1;
  transition: opacity 0.5s 2s;
}

.dots {
  transform: translate3d(0, 0, calc(var(--depth) * 3));
}

[data-exploded] .dots,
[data-exploded] .dots::after {
  transition: opacity 0.5s 3s;
}

.noise {
  transform: translate3d(0, 0, calc(var(--depth) * 2));
}

[data-exploded] .noise,
[data-exploded] .noise::after {
  transition: opacity 0.5s 2.75s;
}

.backdrop {
  transform: translate3d(0, 0, var(--depth));
}

[data-exploded] .backdrop,
[data-exploded] .backdrop::after {
  transition: opacity 0.5s 2.5s;
}


.scene {
  transition: transform 1s 2.5s;
}

.canvas {
  transition: transform 1s 1.5s;
}

.scene::after,
.canvas::after {
  transition: opacity 0.5s 1s;
}

.backdrop,
.backdrop::after {
  transition: opacity 0.5s 0.5s;
}

.noise,
.noise::after {
  transition: opacity 0.5s 0.25s;
}

.dots,
.dots::after {
  transition: opacity 0.5s 0s;
}